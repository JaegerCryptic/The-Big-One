package edu.view.ui.classes.attendence;

import edu.config.PropertyLoader;
import edu.curd.dto.AttendanceDTO;
import edu.curd.dto.ClassDTO;
import edu.curd.dto.StudentDTO;
import edu.curd.operation.JDBCDataObject;
import edu.data.service.ManageAttendenceService;
import edu.data.service.ManageClassService;
import edu.data.service.ManageStudentService;
import edu.data.service.impl.ManageAttendenceServiceImpl;
import edu.data.service.impl.ManageClassImpl;
import edu.data.service.impl.ManageStudentServiceImpl;
import edu.view.ui.MainForm;
import edu.view.ui.excercises.*;
import edu.view.ui.classes.*;
import edu.view.ui.teacher.*;
import edu.view.ui.util.GenericComboItem;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

public class ViewAttendence extends javax.swing.JDialog {

    ManageClassService manageClassService = new ManageClassImpl();
    ManageStudentService manageStudentService = new ManageStudentServiceImpl();

    ManageAttendenceService manageAttendenceService = new ManageAttendenceServiceImpl();

    SimpleDateFormat sdf = new SimpleDateFormat(PropertyLoader.getInstance().getProperty("DB_DATE_FORMAT"));

    public ViewAttendence(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initDataSettings();
    }

    public ViewAttendence(java.awt.Frame parent) {
        super(parent);
        initComponents();
        initDataSettings();
    }

    private ViewAttendence() {
        super();
        initComponents();
        initDataSettings();
    }

    private void initDataSettings() {
        this.addComponentListener(new ComponentAdapter() {
            public void componentShown(ComponentEvent evt) {
                loadClassDetails();
                // loadStudentDetails();
                // lblDatetTime.setText(simpleDateFormat.format(new Date()));
            }

        });
    }

    private void loadClassDetails() {

                cmbClasses.removeAllItems();
        DefaultTableModel defaultTableModel = (DefaultTableModel) studentTable.getModel();
        defaultTableModel.setRowCount(0);
        
        List<JDBCDataObject> classObjLis = manageClassService.viewAllClasses();
        if (classObjLis != null && !classObjLis.isEmpty()) {

            classObjLis.forEach((classRow) -> {
                ClassDTO classObject = (ClassDTO) classRow;
                cmbClasses.addItem(new GenericComboItem(classObject.getClassId(), classObject.getTopic()).toString());
            });
        } else {
            // JOptionPane.showMessageDialog(this, "No Classes to display!");
        }
    }

    private void loadStudentDetails(List<AttendanceDTO> studentList) {

        if (studentList == null || studentList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No Students to display!");
            return;
        }

        DefaultTableModel defaultTableModel = (DefaultTableModel) studentTable.getModel();
        defaultTableModel.setRowCount(0);

        studentList.forEach((jdbcStudent) -> {

            AttendanceDTO student = (AttendanceDTO) jdbcStudent;
            String attended = "NO";

            if (student.getAttendanceId() > 0) {
                attended = "YES";
            }
            defaultTableModel.addRow(new Object[]{attended, student.getStudentId(), student.getFullName()});
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uName_label1 = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        content = new javax.swing.JPanel();
        uName_label = new javax.swing.JLabel();
        cmbClasses = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        uName_label2 = new javax.swing.JLabel();
        cancle = new javax.swing.JButton();
        txtDate = new com.toedter.calendar.JDateChooser();
        search = new javax.swing.JButton();

        uName_label1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        uName_label1.setForeground(new java.awt.Color(204, 204, 204));
        uName_label1.setText("Class ID:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        header.setBackground(new java.awt.Color(30, 130, 76));
        header.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("Student Attendance");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        content.setBackground(new java.awt.Color(51, 51, 51));

        uName_label.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        uName_label.setForeground(new java.awt.Color(204, 204, 204));
        uName_label.setText("Class ID:");

        cmbClasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClassesActionPerformed(evt);
            }
        });

        studentTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Attended", "Student ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(studentTable);

        uName_label2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        uName_label2.setForeground(new java.awt.Color(204, 204, 204));
        uName_label2.setText("Date:");

        cancle.setText("Cancel");
        cancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleActionPerformed(evt);
            }
        });

        txtDate.setBackground(new java.awt.Color(51, 51, 51));
        txtDate.setForeground(new java.awt.Color(255, 255, 255));
        txtDate.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(contentLayout.createSequentialGroup()
                                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(uName_label)
                                    .addComponent(uName_label2))
                                .addGap(122, 122, 122)
                                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbClasses, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(contentLayout.createSequentialGroup()
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(search))))))
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(cancle)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uName_label)
                    .addComponent(cmbClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uName_label2)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(cancle)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbClassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClassesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbClassesActionPerformed

    private void cancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleActionPerformed
        cmbClasses.removeAllItems();
        DefaultTableModel defaultTableModel = (DefaultTableModel) studentTable.getModel();
        defaultTableModel.setRowCount(0);
        this.setVisible(false);
    }//GEN-LAST:event_cancleActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

        //if (txtstudentDOB.isValid())
        Date date = txtDate.getDate();

        if (null != date) {
            String dateString = sdf.format(date);
            List<AttendanceDTO> attendence = manageAttendenceService.viewStudentAttendence(this.getSelectedClassId(), dateString);

            if (null != attendence && !attendence.isEmpty()) {

                loadStudentDetails(attendence);

            }

        }

    }//GEN-LAST:event_searchActionPerformed

    private int getSelectedClassId() {
        try {
            String selectedClass = (String) cmbClasses.getSelectedItem();
            return Integer.valueOf(selectedClass.split(" - ")[0]);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No Classes were selected!");
        }
        return 0;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancle;
    private javax.swing.JComboBox<String> cmbClasses;
    private javax.swing.JPanel content;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JTable studentTable;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JLabel uName_label;
    private javax.swing.JLabel uName_label1;
    private javax.swing.JLabel uName_label2;
    // End of variables declaration//GEN-END:variables
}
