package edu.view.ui.excercises;

import edu.curd.dto.ClassDTO;
import edu.curd.operation.JDBCDataObject;
import edu.curd.operation.excercises.ManageClassExercises;
import edu.data.service.ClassExcercisesService;
import edu.data.service.ManageClassService;
import edu.data.service.ManageGradesService;
import edu.data.service.impl.ClassExcercisesServiceImpl;
import edu.data.service.impl.ManageClassImpl;
import edu.data.service.impl.ManageGradesServiceImpl;
import edu.view.ui.MainForm;
import edu.view.ui.classes.*;
import edu.view.ui.teacher.*;
import edu.view.ui.util.GenericComboItem;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JOptionPane;

public class AddClassExcersises extends javax.swing.JDialog {

    ClassExcercisesService manageClassExercises = new ClassExcercisesServiceImpl();
    ManageClassService manageClassService = new ManageClassImpl();

    public AddClassExcersises(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initGui();
    }

    public AddClassExcersises(java.awt.Frame parent) {
        super(parent);
        initComponents();
        initGui();
    }

    public AddClassExcersises() {
        super();
        initComponents();
        initGui();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        content = new javax.swing.JPanel();
        uName_label = new javax.swing.JLabel();
        cmbExcersise = new javax.swing.JComboBox<>();
        cmbClasses = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        uPass_label1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        header.setBackground(new java.awt.Color(30, 130, 76));
        header.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("New Exercise");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        content.setBackground(new java.awt.Color(51, 51, 51));

        uName_label.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        uName_label.setForeground(new java.awt.Color(204, 204, 204));
        uName_label.setText("Class ID:");

        cmbExcersise.setEditable(true);
        cmbExcersise.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Assignment", "Tutorial", "In-class Activity", "Term End Exam", "Group Assignment" }));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        uPass_label1.setBackground(new java.awt.Color(0, 0, 0));
        uPass_label1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        uPass_label1.setForeground(new java.awt.Color(204, 204, 204));
        uPass_label1.setText("Excercise Type:");

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(uName_label)
                        .addGap(63, 63, 63))
                    .addComponent(uPass_label1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(64, 64, 64)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbClasses, 0, 283, Short.MAX_VALUE)
                    .addComponent(cmbExcersise, 0, 283, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(cancel)
                .addGap(121, 121, 121)
                .addComponent(save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uName_label)
                    .addComponent(cmbClasses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbExcersise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uPass_label1))
                .addGap(34, 34, 34)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(cancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        if (manageClassExercises.saveExcersise(getSelectedClassId(), getSelectedExcercises())) {
            JOptionPane.showMessageDialog(this, "Excercise successfuly Saved!");
        } else {
            JOptionPane.showMessageDialog(this, "Error while saving the excercise");
        }
    }//GEN-LAST:event_saveActionPerformed

    private String getSelectedExcercises() {
        try {
            return (String) cmbExcersise.getSelectedItem();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No Excercises were selected!");
        }
        return null;
    }

    private int getSelectedClassId() {
        try {
            String selectedClass = (String) cmbClasses.getSelectedItem();
            int selectedClassId = Integer.valueOf(selectedClass.split(" - ")[0]);
            return selectedClassId;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No Classes were selected!");
        }
        return 0;
    }

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        AddClassExcersises clss = new AddClassExcersises();
        clss.setVisible(true);
    }

    private void loadClassDetails() {
        List<JDBCDataObject> classObjLis = manageClassService.viewAllClasses();
        if (classObjLis != null && !classObjLis.isEmpty()) {

            classObjLis.forEach((classRow) -> {
                ClassDTO classObject = (ClassDTO) classRow;
                cmbClasses.addItem(new GenericComboItem(classObject.getClassId(), classObject.getTopic()).toString());
            });
        } else {
            //JOptionPane.showMessageDialog(this, "No Classes to display!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox<String> cmbClasses;
    private javax.swing.JComboBox<String> cmbExcersise;
    private javax.swing.JPanel content;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton save;
    private javax.swing.JLabel uName_label;
    private javax.swing.JLabel uPass_label1;
    // End of variables declaration//GEN-END:variables

    private void initGui() {

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                loadClassDetails();
            }
        });
    }
}
